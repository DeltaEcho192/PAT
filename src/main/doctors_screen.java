/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class doctors_screen extends javax.swing.JFrame {

    /**
     * Creates new form doctors_screen
     */
    
    public int x = 0;
    public int z = -1;
    public ResultSet resultSet = null;
    main M = new main();
    
    public doctors_screen() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
    }
    
    private void gotoRow(int row)
    {
        doctorTable.setRowSelectionInterval(row, row);
        doctorTable.scrollRectToVisible(doctorTable.getCellRect(row, 0, true));
        
    }
    
    
    private void refresh()
    {
        x = 0;
        Connection connection = null;
        Statement statement = null;
        
 
        // Step 1: Loading or 
        // registering Oracle JDBC driver class
        try {
 
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
        }
        catch(ClassNotFoundException cnfex) {
 
            System.out.println("Problem in loading or "
                    + "registering MS Access JDBC driver");
            cnfex.printStackTrace();
        }
        
        
        // Step 2: Opening database connection
        try {
            x = x + 1; 
            //TODO Fix Date Display
            String[] columnNames = {"DocID","FName","SName","Field","Ward"};
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(columnNames);
            doctorTable.setModel(model);
            
            String msAccDB = System.getProperty("user.dir")+"\\src\\main\\"
                    + "StJohnDatabase_PAT.accdb";
            String dbURL = "jdbc:ucanaccess://"
                    + msAccDB; 
 
            // Step 2.A: Create and 
            // get connection using DriverManager class
            connection = DriverManager.getConnection(dbURL); 
 
            // Step 2.B: Creating JDBC Statement 
            statement = connection.createStatement();
 
            // Step 2.C: Executing SQL and 
            // retrieve data into ResultSet
            resultSet = statement.executeQuery("SELECT * FROM tblDoctor");
 
 
            // processing returned data and printing into console
            while(resultSet.next()) {
                int DocID = resultSet.getInt(1);
                String FName = resultSet.getString(2);
                String SName = resultSet.getString(3);
                String field = resultSet.getString(4);
                String ward = resultSet.getString(5);

                    
                x = x + 1;
                model.addRow(new Object[] {DocID,FName,SName,field,ward});
            }
              
                    
        }
        catch(SQLException sqlex){
            sqlex.printStackTrace();
        }
        finally {
            // Step 3: Closing database connection
            try {
                if(null != connection) {
                    // cleanup resources, once after processing
                    resultSet.close();
                    statement.close();
 
                    // and then finally close connection
                    connection.close();
                }
            }
            catch (SQLException sqlex) {
                sqlex.printStackTrace();
            }
        }
    }
    
    private boolean stringCheck(String s)
   {
       boolean check = true;
       
       if(s.isEmpty())
       {
           check = false;
           
       }
       else{
        for(int i = 0; i < s.length();i++)
        {
            char x = s.charAt(i);
            if(Character.isDigit(x) == true)
            {
                check = false;
            }
        }
       }
       return check;
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doctorL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctorTable = new javax.swing.JTable();
        hireB = new javax.swing.JButton();
        editB = new javax.swing.JButton();
        dismissB = new javax.swing.JButton();
        nameL = new javax.swing.JLabel();
        surnameL = new javax.swing.JLabel();
        fieldL = new javax.swing.JLabel();
        wardL = new javax.swing.JLabel();
        nameT = new javax.swing.JTextField();
        sNameT = new javax.swing.JTextField();
        fieldT = new javax.swing.JTextField();
        wardCB = new javax.swing.JComboBox<>();
        firstB = new javax.swing.JButton();
        lastB = new javax.swing.JButton();
        upB = new javax.swing.JButton();
        downB = new javax.swing.JButton();
        refreshB = new javax.swing.JButton();
        helpB = new javax.swing.JButton();
        backB = new javax.swing.JButton();
        titleL = new javax.swing.JLabel();
        subTitleL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        doctorL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        doctorL.setText("Doctors");

        doctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DocID", "FName", "SName", "Field", "Ward"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(doctorTable);

        hireB.setText("Hire");
        hireB.setPreferredSize(new java.awt.Dimension(85, 23));
        hireB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hireBActionPerformed(evt);
            }
        });

        editB.setText("Edit Doctor");
        editB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBActionPerformed(evt);
            }
        });

        dismissB.setText("Dismiss");
        dismissB.setPreferredSize(new java.awt.Dimension(85, 23));
        dismissB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dismissBActionPerformed(evt);
            }
        });

        nameL.setText("First Name");

        surnameL.setText("Last Name");

        fieldL.setText("Field");

        wardL.setText("Ward");

        wardCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));

        firstB.setText("<<");
        firstB.setPreferredSize(new java.awt.Dimension(50, 23));
        firstB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBActionPerformed(evt);
            }
        });

        lastB.setText(">>");
        lastB.setPreferredSize(new java.awt.Dimension(50, 23));
        lastB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBActionPerformed(evt);
            }
        });

        upB.setText("<");
        upB.setPreferredSize(new java.awt.Dimension(50, 23));
        upB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBActionPerformed(evt);
            }
        });

        downB.setText(">");
        downB.setPreferredSize(new java.awt.Dimension(50, 23));
        downB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downBActionPerformed(evt);
            }
        });

        refreshB.setText("Refresh");
        refreshB.setPreferredSize(new java.awt.Dimension(75, 23));
        refreshB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBActionPerformed(evt);
            }
        });

        helpB.setText("Help");
        helpB.setPreferredSize(new java.awt.Dimension(75, 23));
        helpB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBActionPerformed(evt);
            }
        });

        backB.setText("Back");
        backB.setPreferredSize(new java.awt.Dimension(75, 23));
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });

        titleL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleL.setText("St John's Hospital");

        subTitleL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subTitleL.setText("Administavtive Program");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editB)
                            .addComponent(hireB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dismissB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(231, 231, 231)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(surnameL, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fieldL, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(wardL, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sNameT, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fieldT, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wardCB, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(284, 284, 284)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(downB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(refreshB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(helpB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doctorL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(titleL)
                                .addGap(351, 351, 351))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(subTitleL)
                                .addGap(381, 381, 381))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(subTitleL))
                    .addComponent(doctorL, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hireB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(editB)
                                .addGap(31, 31, 31)
                                .addComponent(dismissB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameL)
                                    .addComponent(nameT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(surnameL)
                                    .addComponent(sNameT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldL)
                                    .addComponent(fieldT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(wardL)
                                    .addComponent(wardCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(downB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addComponent(refreshB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(helpB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_refreshBActionPerformed

    private void firstBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBActionPerformed
        // TODO add your handling code here:
        z = 0;
        gotoRow(0);
    }//GEN-LAST:event_firstBActionPerformed

    private void lastBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBActionPerformed
        // TODO add your handling code here:
        System.out.println(x);
        z = x-2;
        gotoRow(x-2);
    }//GEN-LAST:event_lastBActionPerformed

    private void upBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBActionPerformed
        // TODO add your handling code here:
        if(z > 0)
        {
            gotoRow(z-1);
            z = z - 1;
        }
    }//GEN-LAST:event_upBActionPerformed

    private void downBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downBActionPerformed
        // TODO add your handling code here:
        gotoRow(z+1);
        z = z + 1;
    }//GEN-LAST:event_downBActionPerformed

    private void dismissBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dismissBActionPerformed
        // TODO add your handling code here:
        String query = "DELETE FROM tblDoctor WHERE DocID = "+doctorTable.getValueAt(z,0);
        M.executeSQL(query);
        x = x - 1;
        refresh();
    }//GEN-LAST:event_dismissBActionPerformed

    private void hireBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hireBActionPerformed
        // TODO add your handling code here:
        try
        {
            String name = nameT.getText();
        if(stringCheck(name) == false)
        {
            throw new Exception("There was a issue with the name");
        }
        String Sname = sNameT.getText();
        if(stringCheck(Sname) == false)
        {
            throw new Exception("There was a issue with the surname");
        }
        String field = fieldT.getText();
        if(stringCheck(field) == false)
        {
            throw new Exception("There was a issue with the field entry");
        }
        String ward = wardCB.getSelectedItem().toString();
        
        String query = "INSERT INTO tblDoctor (FName,SName,Field,Ward) VALUES ('"+name+"','"+Sname+"','"+field+"','"+ward+"')";
        System.out.println(query);
        M.executeSQL(query);
        refresh();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_hireBActionPerformed

    private void editBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBActionPerformed
        // TODO add your handling code here:
        try
        {
            String query = "UPDATE tblDoctor SET ";
            if(!nameT.getText().isEmpty())
            {
                query += "FName = '"+nameT.getText()+"',";
            }
            if(!sNameT.getText().isEmpty())
            {
                query += "SName = '"+sNameT.getText()+"',";
            }
            if(!fieldT.getText().isEmpty())
            {
                query += "Field = '"+fieldT.getText()+"',";
            }
            String ward = wardCB.getSelectedItem().toString();
            if(!ward.equals(doctorTable.getValueAt(z,4)))
            {
                query += "Ward = '"+ward+"',";
            }
            query = query.substring(0,query.length() - 1);
            query += " WHERE DocID = "+doctorTable.getValueAt(z,0);
            System.out.println(query);
              
            M.executeSQL(query);
            refresh();
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editBActionPerformed

    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed
        main_screen MainSc = new main_screen();
        MainSc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBActionPerformed

    private void helpBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBActionPerformed
        help_screen help = new help_screen();
        help.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_helpBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(doctors_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(doctors_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(doctors_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(doctors_screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new doctors_screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backB;
    private javax.swing.JButton dismissB;
    private javax.swing.JLabel doctorL;
    private javax.swing.JTable doctorTable;
    private javax.swing.JButton downB;
    private javax.swing.JButton editB;
    private javax.swing.JLabel fieldL;
    private javax.swing.JTextField fieldT;
    private javax.swing.JButton firstB;
    private javax.swing.JButton helpB;
    private javax.swing.JButton hireB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastB;
    private javax.swing.JLabel nameL;
    private javax.swing.JTextField nameT;
    private javax.swing.JButton refreshB;
    private javax.swing.JTextField sNameT;
    private javax.swing.JLabel subTitleL;
    private javax.swing.JLabel surnameL;
    private javax.swing.JLabel titleL;
    private javax.swing.JButton upB;
    private javax.swing.JComboBox<String> wardCB;
    private javax.swing.JLabel wardL;
    // End of variables declaration//GEN-END:variables
}
